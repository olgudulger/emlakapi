// <auto-generated />
using System;
using DataAccess.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DataAccess.Migrations
{
    [DbContext(typeof(EmlakDbContext))]
    [Migration("20250608160651_UpdatePropertyLocationFields")]
    partial class UpdatePropertyLocationFields
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Entity.Base.Property", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<int>("DistrictId")
                        .HasColumnType("int");

                    b.Property<string>("IntermediaryFullName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IntermediaryPhone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NeighborhoodId")
                        .HasColumnType("int");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PropertyType")
                        .HasColumnType("int");

                    b.Property<int>("ProvinceId")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.HasIndex("DistrictId");

                    b.HasIndex("NeighborhoodId");

                    b.HasIndex("PropertyType");

                    b.HasIndex("ProvinceId");

                    b.ToTable("Properties");

                    b.HasDiscriminator<int>("PropertyType");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("Entity.Models.AppUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("Entity.Models.Customer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("Budget")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CustomerType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InterestType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Notes")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("Phone");

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("Entity.Models.CustomerDistrictPreference", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("CustomerProvincePreferenceId")
                        .HasColumnType("int");

                    b.Property<int>("DistrictId")
                        .HasColumnType("int");

                    b.Property<int?>("DistrictId1")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CustomerProvincePreferenceId");

                    b.HasIndex("DistrictId");

                    b.HasIndex("DistrictId1");

                    b.ToTable("CustomerDistrictPreferences");
                });

            modelBuilder.Entity("Entity.Models.CustomerProvincePreference", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<int>("ProvinceId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.HasIndex("ProvinceId");

                    b.ToTable("CustomerProvincePreferences");
                });

            modelBuilder.Entity("Entity.Models.District", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProvinceId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ProvinceId");

                    b.ToTable("Districts");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Name = "Merkez",
                            ProvinceId = 1
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Name = "Ayvacık",
                            ProvinceId = 1
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Name = "Bayramiç",
                            ProvinceId = 1
                        },
                        new
                        {
                            Id = 4,
                            CreatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Name = "Biga",
                            ProvinceId = 1
                        },
                        new
                        {
                            Id = 5,
                            CreatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Name = "Bozcaada",
                            ProvinceId = 1
                        },
                        new
                        {
                            Id = 6,
                            CreatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Name = "Çan",
                            ProvinceId = 1
                        },
                        new
                        {
                            Id = 7,
                            CreatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Name = "Eceabat",
                            ProvinceId = 1
                        },
                        new
                        {
                            Id = 8,
                            CreatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Name = "Ezine",
                            ProvinceId = 1
                        },
                        new
                        {
                            Id = 9,
                            CreatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Name = "Gelibolu",
                            ProvinceId = 1
                        },
                        new
                        {
                            Id = 10,
                            CreatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Name = "Gökçeada",
                            ProvinceId = 1
                        },
                        new
                        {
                            Id = 11,
                            CreatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Name = "Lapseki",
                            ProvinceId = 1
                        },
                        new
                        {
                            Id = 12,
                            CreatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Name = "Yenice",
                            ProvinceId = 1
                        },
                        new
                        {
                            Id = 13,
                            CreatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Name = "Merkez",
                            ProvinceId = 2
                        },
                        new
                        {
                            Id = 14,
                            CreatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Name = "Enez",
                            ProvinceId = 2
                        },
                        new
                        {
                            Id = 15,
                            CreatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Name = "Havsa",
                            ProvinceId = 2
                        },
                        new
                        {
                            Id = 16,
                            CreatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Name = "İpsala",
                            ProvinceId = 2
                        },
                        new
                        {
                            Id = 17,
                            CreatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Name = "Keşan",
                            ProvinceId = 2
                        },
                        new
                        {
                            Id = 18,
                            CreatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Name = "Lalapaşa",
                            ProvinceId = 2
                        },
                        new
                        {
                            Id = 19,
                            CreatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Name = "Meriç",
                            ProvinceId = 2
                        },
                        new
                        {
                            Id = 20,
                            CreatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Name = "Süloğlu",
                            ProvinceId = 2
                        },
                        new
                        {
                            Id = 21,
                            CreatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Name = "Uzunköprü",
                            ProvinceId = 2
                        },
                        new
                        {
                            Id = 22,
                            CreatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Name = "Merkez",
                            ProvinceId = 3
                        },
                        new
                        {
                            Id = 23,
                            CreatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Name = "Babaeski",
                            ProvinceId = 3
                        },
                        new
                        {
                            Id = 24,
                            CreatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Name = "Demirköy",
                            ProvinceId = 3
                        },
                        new
                        {
                            Id = 25,
                            CreatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Name = "Kofçaz",
                            ProvinceId = 3
                        },
                        new
                        {
                            Id = 26,
                            CreatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Name = "Lüleburgaz",
                            ProvinceId = 3
                        },
                        new
                        {
                            Id = 27,
                            CreatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Name = "Pehlivanköy",
                            ProvinceId = 3
                        },
                        new
                        {
                            Id = 28,
                            CreatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Name = "Pınarhisar",
                            ProvinceId = 3
                        },
                        new
                        {
                            Id = 29,
                            CreatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Name = "Vize",
                            ProvinceId = 3
                        },
                        new
                        {
                            Id = 30,
                            CreatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Name = "Süleymanpaşa",
                            ProvinceId = 4
                        },
                        new
                        {
                            Id = 31,
                            CreatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Name = "Çerkezköy",
                            ProvinceId = 4
                        },
                        new
                        {
                            Id = 32,
                            CreatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Name = "Çorlu",
                            ProvinceId = 4
                        },
                        new
                        {
                            Id = 33,
                            CreatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Name = "Ergene",
                            ProvinceId = 4
                        },
                        new
                        {
                            Id = 34,
                            CreatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Name = "Hayrabolu",
                            ProvinceId = 4
                        },
                        new
                        {
                            Id = 35,
                            CreatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Name = "Kapaklı",
                            ProvinceId = 4
                        },
                        new
                        {
                            Id = 36,
                            CreatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Name = "Malkara",
                            ProvinceId = 4
                        },
                        new
                        {
                            Id = 37,
                            CreatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Name = "Marmaraereğlisi",
                            ProvinceId = 4
                        },
                        new
                        {
                            Id = 38,
                            CreatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Name = "Muratlı",
                            ProvinceId = 4
                        },
                        new
                        {
                            Id = 39,
                            CreatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Name = "Saray",
                            ProvinceId = 4
                        },
                        new
                        {
                            Id = 40,
                            CreatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Name = "Şarköy",
                            ProvinceId = 4
                        });
                });

            modelBuilder.Entity("Entity.Models.Neighborhood", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("DistrictId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("DistrictId");

                    b.ToTable("Neighborhoods");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            DistrictId = 1,
                            Name = "Cumhuriyet"
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            DistrictId = 1,
                            Name = "Kemalpaşa"
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            DistrictId = 1,
                            Name = "Namık Kemal"
                        },
                        new
                        {
                            Id = 4,
                            CreatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            DistrictId = 1,
                            Name = "Barbaros"
                        },
                        new
                        {
                            Id = 5,
                            CreatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            DistrictId = 1,
                            Name = "Fevzipaşa"
                        },
                        new
                        {
                            Id = 6,
                            CreatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            DistrictId = 1,
                            Name = "Esenler"
                        },
                        new
                        {
                            Id = 7,
                            CreatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            DistrictId = 1,
                            Name = "Çamlık"
                        },
                        new
                        {
                            Id = 8,
                            CreatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            DistrictId = 1,
                            Name = "Candarli"
                        },
                        new
                        {
                            Id = 9,
                            CreatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            DistrictId = 2,
                            Name = "Küçükkuyu"
                        },
                        new
                        {
                            Id = 10,
                            CreatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            DistrictId = 2,
                            Name = "Altinoluk"
                        },
                        new
                        {
                            Id = 11,
                            CreatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            DistrictId = 2,
                            Name = "Kadirga"
                        },
                        new
                        {
                            Id = 12,
                            CreatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            DistrictId = 2,
                            Name = "Gülpınar"
                        },
                        new
                        {
                            Id = 13,
                            CreatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            DistrictId = 2,
                            Name = "Assos"
                        },
                        new
                        {
                            Id = 14,
                            CreatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            DistrictId = 2,
                            Name = "Behramkale"
                        },
                        new
                        {
                            Id = 15,
                            CreatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            DistrictId = 3,
                            Name = "Merkez"
                        },
                        new
                        {
                            Id = 16,
                            CreatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            DistrictId = 3,
                            Name = "Çamyayla"
                        },
                        new
                        {
                            Id = 17,
                            CreatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            DistrictId = 3,
                            Name = "Çamlıbel"
                        },
                        new
                        {
                            Id = 18,
                            CreatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            DistrictId = 3,
                            Name = "Kestanelik"
                        },
                        new
                        {
                            Id = 19,
                            CreatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            DistrictId = 3,
                            Name = "Gökçetepe"
                        },
                        new
                        {
                            Id = 20,
                            CreatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            DistrictId = 4,
                            Name = "Çarşı"
                        },
                        new
                        {
                            Id = 21,
                            CreatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            DistrictId = 4,
                            Name = "Yeni"
                        },
                        new
                        {
                            Id = 22,
                            CreatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            DistrictId = 4,
                            Name = "Cumhuriyet"
                        },
                        new
                        {
                            Id = 23,
                            CreatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            DistrictId = 4,
                            Name = "Adnan Menderes"
                        },
                        new
                        {
                            Id = 24,
                            CreatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            DistrictId = 4,
                            Name = "Atatürk"
                        },
                        new
                        {
                            Id = 25,
                            CreatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            DistrictId = 4,
                            Name = "Şirintepe"
                        },
                        new
                        {
                            Id = 26,
                            CreatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            DistrictId = 4,
                            Name = "Karakol"
                        },
                        new
                        {
                            Id = 27,
                            CreatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            DistrictId = 5,
                            Name = "Merkez"
                        },
                        new
                        {
                            Id = 28,
                            CreatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            DistrictId = 5,
                            Name = "Alaybey"
                        },
                        new
                        {
                            Id = 29,
                            CreatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            DistrictId = 5,
                            Name = "Çayır"
                        },
                        new
                        {
                            Id = 30,
                            CreatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            DistrictId = 22,
                            Name = "Cumhuriyet"
                        },
                        new
                        {
                            Id = 31,
                            CreatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            DistrictId = 22,
                            Name = "Kırklareli"
                        },
                        new
                        {
                            Id = 32,
                            CreatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            DistrictId = 22,
                            Name = "Yayla"
                        },
                        new
                        {
                            Id = 33,
                            CreatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            DistrictId = 22,
                            Name = "Doğu"
                        },
                        new
                        {
                            Id = 34,
                            CreatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            DistrictId = 22,
                            Name = "Batı"
                        },
                        new
                        {
                            Id = 35,
                            CreatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            DistrictId = 22,
                            Name = "Kuzey"
                        },
                        new
                        {
                            Id = 36,
                            CreatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            DistrictId = 22,
                            Name = "Güney"
                        },
                        new
                        {
                            Id = 37,
                            CreatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            DistrictId = 22,
                            Name = "Merkez"
                        },
                        new
                        {
                            Id = 38,
                            CreatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            DistrictId = 22,
                            Name = "Yeni"
                        },
                        new
                        {
                            Id = 39,
                            CreatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            DistrictId = 23,
                            Name = "Babaeski"
                        },
                        new
                        {
                            Id = 40,
                            CreatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            DistrictId = 23,
                            Name = "Alpullu"
                        },
                        new
                        {
                            Id = 41,
                            CreatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            DistrictId = 23,
                            Name = "Büyükmandıra"
                        },
                        new
                        {
                            Id = 42,
                            CreatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            DistrictId = 23,
                            Name = "Karahalil"
                        },
                        new
                        {
                            Id = 43,
                            CreatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            DistrictId = 23,
                            Name = "Çavuşköy"
                        },
                        new
                        {
                            Id = 44,
                            CreatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            DistrictId = 23,
                            Name = "Çengerli"
                        },
                        new
                        {
                            Id = 45,
                            CreatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            DistrictId = 23,
                            Name = "Düğüncülü"
                        },
                        new
                        {
                            Id = 46,
                            CreatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            DistrictId = 23,
                            Name = "Erikleryurdu"
                        },
                        new
                        {
                            Id = 47,
                            CreatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            DistrictId = 23,
                            Name = "Ertuğrulköy"
                        },
                        new
                        {
                            Id = 48,
                            CreatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            DistrictId = 23,
                            Name = "Hazinedar"
                        },
                        new
                        {
                            Id = 49,
                            CreatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            DistrictId = 23,
                            Name = "Kadıköy"
                        },
                        new
                        {
                            Id = 50,
                            CreatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            DistrictId = 23,
                            Name = "Karabayır"
                        },
                        new
                        {
                            Id = 51,
                            CreatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            DistrictId = 23,
                            Name = "Karacaoğlan"
                        },
                        new
                        {
                            Id = 52,
                            CreatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            DistrictId = 23,
                            Name = "Karamesutlu"
                        },
                        new
                        {
                            Id = 53,
                            CreatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            DistrictId = 23,
                            Name = "Katranca"
                        },
                        new
                        {
                            Id = 54,
                            CreatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            DistrictId = 23,
                            Name = "Kuleli"
                        },
                        new
                        {
                            Id = 55,
                            CreatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            DistrictId = 23,
                            Name = "Kumrular"
                        },
                        new
                        {
                            Id = 56,
                            CreatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            DistrictId = 23,
                            Name = "Kuzuçardağı"
                        },
                        new
                        {
                            Id = 57,
                            CreatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            DistrictId = 23,
                            Name = "Minnetler"
                        },
                        new
                        {
                            Id = 58,
                            CreatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            DistrictId = 23,
                            Name = "Mutlu"
                        },
                        new
                        {
                            Id = 59,
                            CreatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            DistrictId = 30,
                            Name = "100. Yıl"
                        },
                        new
                        {
                            Id = 60,
                            CreatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            DistrictId = 30,
                            Name = "Ahmedikli"
                        },
                        new
                        {
                            Id = 61,
                            CreatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            DistrictId = 30,
                            Name = "Altınova"
                        },
                        new
                        {
                            Id = 62,
                            CreatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            DistrictId = 30,
                            Name = "Barbaros"
                        },
                        new
                        {
                            Id = 63,
                            CreatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            DistrictId = 30,
                            Name = "Çınarlı"
                        },
                        new
                        {
                            Id = 64,
                            CreatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            DistrictId = 30,
                            Name = "Değirmenaltı"
                        },
                        new
                        {
                            Id = 65,
                            CreatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            DistrictId = 30,
                            Name = "Doğruk"
                        },
                        new
                        {
                            Id = 66,
                            CreatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            DistrictId = 30,
                            Name = "Ertuğrul"
                        },
                        new
                        {
                            Id = 67,
                            CreatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            DistrictId = 30,
                            Name = "Eskicami"
                        },
                        new
                        {
                            Id = 68,
                            CreatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            DistrictId = 30,
                            Name = "Gündoğdu"
                        },
                        new
                        {
                            Id = 69,
                            CreatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            DistrictId = 30,
                            Name = "Hürriyet"
                        },
                        new
                        {
                            Id = 70,
                            CreatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            DistrictId = 30,
                            Name = "Işıklar"
                        },
                        new
                        {
                            Id = 71,
                            CreatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            DistrictId = 30,
                            Name = "Karabezirgan"
                        },
                        new
                        {
                            Id = 72,
                            CreatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            DistrictId = 30,
                            Name = "Karacakılavuz"
                        },
                        new
                        {
                            Id = 73,
                            CreatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            DistrictId = 30,
                            Name = "Karadeniz"
                        },
                        new
                        {
                            Id = 74,
                            CreatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            DistrictId = 30,
                            Name = "Kumbağ"
                        },
                        new
                        {
                            Id = 75,
                            CreatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            DistrictId = 30,
                            Name = "Namık Kemal"
                        },
                        new
                        {
                            Id = 76,
                            CreatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            DistrictId = 30,
                            Name = "Selçuk"
                        },
                        new
                        {
                            Id = 77,
                            CreatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            DistrictId = 30,
                            Name = "Yavuz"
                        },
                        new
                        {
                            Id = 78,
                            CreatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            DistrictId = 30,
                            Name = "Zafer"
                        },
                        new
                        {
                            Id = 79,
                            CreatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            DistrictId = 31,
                            Name = "Bağlık"
                        },
                        new
                        {
                            Id = 80,
                            CreatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            DistrictId = 31,
                            Name = "Cumhuriyet"
                        },
                        new
                        {
                            Id = 81,
                            CreatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            DistrictId = 31,
                            Name = "Fatih"
                        },
                        new
                        {
                            Id = 82,
                            CreatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            DistrictId = 31,
                            Name = "Fevzi Paşa"
                        },
                        new
                        {
                            Id = 83,
                            CreatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            DistrictId = 31,
                            Name = "Gazi Mustafa Kemal Paşa"
                        },
                        new
                        {
                            Id = 84,
                            CreatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            DistrictId = 31,
                            Name = "Gazi Osman Paşa"
                        },
                        new
                        {
                            Id = 85,
                            CreatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            DistrictId = 31,
                            Name = "İstasyon"
                        },
                        new
                        {
                            Id = 86,
                            CreatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            DistrictId = 31,
                            Name = "Kızılpınar"
                        },
                        new
                        {
                            Id = 87,
                            CreatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            DistrictId = 31,
                            Name = "Veliköy"
                        },
                        new
                        {
                            Id = 88,
                            CreatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            DistrictId = 31,
                            Name = "Yıldırım Beyazıt"
                        },
                        new
                        {
                            Id = 89,
                            CreatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            DistrictId = 32,
                            Name = "Alipaşa"
                        },
                        new
                        {
                            Id = 90,
                            CreatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            DistrictId = 32,
                            Name = "Cemaliye"
                        },
                        new
                        {
                            Id = 91,
                            CreatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            DistrictId = 32,
                            Name = "Cumhuriyet"
                        },
                        new
                        {
                            Id = 92,
                            CreatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            DistrictId = 32,
                            Name = "Çobançeşme"
                        },
                        new
                        {
                            Id = 93,
                            CreatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            DistrictId = 32,
                            Name = "Deregündüzlü"
                        },
                        new
                        {
                            Id = 94,
                            CreatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            DistrictId = 32,
                            Name = "Esentepe"
                        },
                        new
                        {
                            Id = 95,
                            CreatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            DistrictId = 32,
                            Name = "Hatip"
                        },
                        new
                        {
                            Id = 96,
                            CreatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            DistrictId = 32,
                            Name = "Havuzlar"
                        },
                        new
                        {
                            Id = 97,
                            CreatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            DistrictId = 32,
                            Name = "Hıdırağa"
                        },
                        new
                        {
                            Id = 98,
                            CreatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            DistrictId = 32,
                            Name = "Hürriyet"
                        },
                        new
                        {
                            Id = 99,
                            CreatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            DistrictId = 32,
                            Name = "Kazımiye"
                        },
                        new
                        {
                            Id = 100,
                            CreatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            DistrictId = 32,
                            Name = "Kemalettin"
                        },
                        new
                        {
                            Id = 101,
                            CreatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            DistrictId = 32,
                            Name = "Maksutlu"
                        },
                        new
                        {
                            Id = 102,
                            CreatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            DistrictId = 32,
                            Name = "Muhittin"
                        },
                        new
                        {
                            Id = 103,
                            CreatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            DistrictId = 32,
                            Name = "Nusratiye"
                        },
                        new
                        {
                            Id = 104,
                            CreatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            DistrictId = 32,
                            Name = "Önerler"
                        },
                        new
                        {
                            Id = 105,
                            CreatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            DistrictId = 32,
                            Name = "Reşadiye"
                        },
                        new
                        {
                            Id = 106,
                            CreatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            DistrictId = 32,
                            Name = "Rumeli"
                        },
                        new
                        {
                            Id = 107,
                            CreatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            DistrictId = 32,
                            Name = "Sarılar"
                        },
                        new
                        {
                            Id = 108,
                            CreatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            DistrictId = 32,
                            Name = "Seymen"
                        },
                        new
                        {
                            Id = 109,
                            CreatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            DistrictId = 32,
                            Name = "Silahtarağa"
                        },
                        new
                        {
                            Id = 110,
                            CreatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            DistrictId = 32,
                            Name = "Şahpaz"
                        },
                        new
                        {
                            Id = 111,
                            CreatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            DistrictId = 32,
                            Name = "Şeyhsinan"
                        },
                        new
                        {
                            Id = 112,
                            CreatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            DistrictId = 32,
                            Name = "Türkgücü"
                        },
                        new
                        {
                            Id = 113,
                            CreatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            DistrictId = 32,
                            Name = "Yenice"
                        },
                        new
                        {
                            Id = 114,
                            CreatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            DistrictId = 32,
                            Name = "Zafer"
                        });
                });

            modelBuilder.Entity("Entity.Models.PropertyDocument", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("FileName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FilePath")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PropertyId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("PropertyId");

                    b.ToTable("PropertyDocuments");
                });

            modelBuilder.Entity("Entity.Models.PropertyPriceHistory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("PropertyId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("PropertyId");

                    b.ToTable("PropertyPriceHistories");
                });

            modelBuilder.Entity("Entity.Models.Province", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Provinces");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Name = "Çanakkale"
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Name = "Edirne"
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Name = "Kırklareli"
                        },
                        new
                        {
                            Id = 4,
                            CreatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Name = "Tekirdağ"
                        });
                });

            modelBuilder.Entity("Entity.Models.RefreshToken", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedByIp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ExpiresAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("ReplacedByToken")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("RevokedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("RevokedByIp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Token")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("RefreshTokens");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("Entity.Models.ApartmentProperty", b =>
                {
                    b.HasBaseType("Entity.Base.Property");

                    b.Property<int>("BalconyCount")
                        .HasColumnType("int");

                    b.Property<int>("BathroomCount")
                        .HasColumnType("int");

                    b.Property<string>("Elevator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ElevatorType")
                        .HasColumnType("int");

                    b.Property<string>("Floor")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("FornitureStatus")
                        .HasColumnType("int");

                    b.Property<int>("HeatingType")
                        .HasColumnType("int");

                    b.Property<int>("LivingRoomCount")
                        .HasColumnType("int");

                    b.Property<string>("ParkingCount")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ParkingType")
                        .HasColumnType("int");

                    b.Property<int>("RoomCount")
                        .HasColumnType("int");

                    b.Property<int>("TotalAreaGross")
                        .HasColumnType("int");

                    b.Property<int>("TotalAreaNet")
                        .HasColumnType("int");

                    b.HasDiscriminator().HasValue(2);
                });

            modelBuilder.Entity("Entity.Models.FieldProperty", b =>
                {
                    b.HasBaseType("Entity.Base.Property");

                    b.Property<string>("BlockNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("FieldType")
                        .HasColumnType("int");

                    b.Property<string>("ParcelNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("PricePerSquareMeter")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("RoadStatus")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("TotalArea")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("TotalPrice")
                        .HasColumnType("decimal(18,2)");

                    b.HasDiscriminator().HasValue(1);
                });

            modelBuilder.Entity("Entity.Models.LandProperty", b =>
                {
                    b.HasBaseType("Entity.Base.Property");

                    b.Property<string>("BlockNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("LandType")
                        .HasColumnType("int");

                    b.Property<string>("ParcelNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("PricePerSquareMeter")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("TotalArea")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("TotalPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("ZoningStatus")
                        .HasColumnType("int");

                    b.ToTable("Properties", t =>
                        {
                            t.Property("BlockNumber")
                                .HasColumnName("LandProperty_BlockNumber");

                            t.Property("ParcelNumber")
                                .HasColumnName("LandProperty_ParcelNumber");

                            t.Property("PricePerSquareMeter")
                                .HasColumnName("LandProperty_PricePerSquareMeter");

                            t.Property("TotalArea")
                                .HasColumnName("LandProperty_TotalArea");

                            t.Property("TotalPrice")
                                .HasColumnName("LandProperty_TotalPrice");
                        });

                    b.HasDiscriminator().HasValue(0);
                });

            modelBuilder.Entity("Entity.Models.SharedParcelProperty", b =>
                {
                    b.HasBaseType("Entity.Base.Property");

                    b.Property<string>("BlockNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ParcelNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("PricePerSquareMeter")
                        .HasColumnType("decimal(18,2)");

                    b.Property<float>("ShareRatio")
                        .HasColumnType("real");

                    b.Property<decimal>("TotalArea")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("TotalPrice")
                        .HasColumnType("decimal(18,2)");

                    b.ToTable("Properties", t =>
                        {
                            t.Property("BlockNumber")
                                .HasColumnName("SharedParcelProperty_BlockNumber");

                            t.Property("ParcelNumber")
                                .HasColumnName("SharedParcelProperty_ParcelNumber");

                            t.Property("PricePerSquareMeter")
                                .HasColumnName("SharedParcelProperty_PricePerSquareMeter");

                            t.Property("TotalArea")
                                .HasColumnName("SharedParcelProperty_TotalArea");

                            t.Property("TotalPrice")
                                .HasColumnName("SharedParcelProperty_TotalPrice");
                        });

                    b.HasDiscriminator().HasValue(4);
                });

            modelBuilder.Entity("Entity.Models.WorkplaceProperty", b =>
                {
                    b.HasBaseType("Entity.Base.Property");

                    b.Property<int>("BasementStatus")
                        .HasColumnType("int");

                    b.Property<int>("BathroomCount")
                        .HasColumnType("int");

                    b.Property<int>("HeatingType")
                        .HasColumnType("int");

                    b.Property<int>("MezzanineStatus")
                        .HasColumnType("int");

                    b.Property<int>("RoomCount")
                        .HasColumnType("int");

                    b.Property<int>("TotalAreaGross")
                        .HasColumnType("int");

                    b.Property<int>("TotalAreaNet")
                        .HasColumnType("int");

                    b.Property<int>("UsageStatus")
                        .HasColumnType("int");

                    b.Property<int>("WorkplaceType")
                        .HasColumnType("int");

                    b.ToTable("Properties", t =>
                        {
                            t.Property("BathroomCount")
                                .HasColumnName("WorkplaceProperty_BathroomCount");

                            t.Property("HeatingType")
                                .HasColumnName("WorkplaceProperty_HeatingType");

                            t.Property("RoomCount")
                                .HasColumnName("WorkplaceProperty_RoomCount");

                            t.Property("TotalAreaGross")
                                .HasColumnName("WorkplaceProperty_TotalAreaGross");

                            t.Property("TotalAreaNet")
                                .HasColumnName("WorkplaceProperty_TotalAreaNet");
                        });

                    b.HasDiscriminator().HasValue(3);
                });

            modelBuilder.Entity("Entity.Base.Property", b =>
                {
                    b.HasOne("Entity.Models.Customer", "Customer")
                        .WithMany("Properties")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Entity.Models.District", "District")
                        .WithMany()
                        .HasForeignKey("DistrictId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Entity.Models.Neighborhood", "Neighborhood")
                        .WithMany("Properties")
                        .HasForeignKey("NeighborhoodId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Entity.Models.Province", "Province")
                        .WithMany()
                        .HasForeignKey("ProvinceId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Customer");

                    b.Navigation("District");

                    b.Navigation("Neighborhood");

                    b.Navigation("Province");
                });

            modelBuilder.Entity("Entity.Models.CustomerDistrictPreference", b =>
                {
                    b.HasOne("Entity.Models.CustomerProvincePreference", "CustomerProvincePreference")
                        .WithMany("DistrictPreferences")
                        .HasForeignKey("CustomerProvincePreferenceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Entity.Models.District", "District")
                        .WithMany()
                        .HasForeignKey("DistrictId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Entity.Models.District", null)
                        .WithMany("CustomerDistrictPreferences")
                        .HasForeignKey("DistrictId1");

                    b.Navigation("CustomerProvincePreference");

                    b.Navigation("District");
                });

            modelBuilder.Entity("Entity.Models.CustomerProvincePreference", b =>
                {
                    b.HasOne("Entity.Models.Customer", "Customer")
                        .WithMany("ProvincePreferences")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Entity.Models.Province", "Province")
                        .WithMany()
                        .HasForeignKey("ProvinceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");

                    b.Navigation("Province");
                });

            modelBuilder.Entity("Entity.Models.District", b =>
                {
                    b.HasOne("Entity.Models.Province", "Province")
                        .WithMany("Districts")
                        .HasForeignKey("ProvinceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Province");
                });

            modelBuilder.Entity("Entity.Models.Neighborhood", b =>
                {
                    b.HasOne("Entity.Models.District", "District")
                        .WithMany("Neighborhoods")
                        .HasForeignKey("DistrictId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("District");
                });

            modelBuilder.Entity("Entity.Models.PropertyDocument", b =>
                {
                    b.HasOne("Entity.Base.Property", "Property")
                        .WithMany()
                        .HasForeignKey("PropertyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Property");
                });

            modelBuilder.Entity("Entity.Models.PropertyPriceHistory", b =>
                {
                    b.HasOne("Entity.Base.Property", "Property")
                        .WithMany()
                        .HasForeignKey("PropertyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Property");
                });

            modelBuilder.Entity("Entity.Models.RefreshToken", b =>
                {
                    b.HasOne("Entity.Models.AppUser", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Entity.Models.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Entity.Models.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Entity.Models.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Entity.Models.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Entity.Models.Customer", b =>
                {
                    b.Navigation("Properties");

                    b.Navigation("ProvincePreferences");
                });

            modelBuilder.Entity("Entity.Models.CustomerProvincePreference", b =>
                {
                    b.Navigation("DistrictPreferences");
                });

            modelBuilder.Entity("Entity.Models.District", b =>
                {
                    b.Navigation("CustomerDistrictPreferences");

                    b.Navigation("Neighborhoods");
                });

            modelBuilder.Entity("Entity.Models.Neighborhood", b =>
                {
                    b.Navigation("Properties");
                });

            modelBuilder.Entity("Entity.Models.Province", b =>
                {
                    b.Navigation("Districts");
                });
#pragma warning restore 612, 618
        }
    }
}
